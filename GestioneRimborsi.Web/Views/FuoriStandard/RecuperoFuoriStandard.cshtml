@using GestioneRimborsi.Web.Models;

@{
    ViewBag.Title = "RecuperoFuoriStandard";

    if (!CurrentUser.HasPermissionOrIsPrivileged("gfs.fuoriStandard.nonIndennizzabili"))
    {
        Response.Redirect(CommonUrls.BaseUrl);
    }

    IFuoriStandardService _fuoriStandardService = (IFuoriStandardService)RevoContext.ServiceProvider.GetServiceFor<FuoriStandard>();
}
<div class="row">
    @Html.Partial("~/views/rimborsi/_newModalWaiter.cshtml", "")
    @Html.Partial("~/views/FuoriStandard/_ricercaAvanzataStoricoModal.cshtml")
    @Html.Partial("~/views/FuoriStandard/_causaCAPModal.cshtml", null)
    @Html.Partial("~/views/FuoriStandard/_FuoriStandardNonIndennizzabile.cshtml", "")
    @Html.Partial("~/views/rimborsi/_cercaClienteModal.cshtml")
    <div class="col-sm-12 space-container">
        <div class="col-sm-12">
            <div id="rowFilter">
                <h2>
                    @CommonSnippets.IconLinkToHomepage
                    /
                    <i class="fa fa-chain"></i>
                    <span class="text-after-icon">Recupero Prestazioni non indennizzabili</span>
                </h2>
            </div>
        </div>
    </div>
    <div class="col-sm-12 space-container">
        <div class="row container-fluid">
            <div class="col-sm-2">
                <div class="row">
                    <div class="col-sm-12">
                        @Html.Partial("_leftMenu", "RecuperoFuoriStandard")
                    </div>
                </div>
            </div>
            <div class="col-sm-10">
                <div class="row container-fluid">
                    <div id="recuperoPrestazioniContainer" class="col-sm-12">
                        <div class="container-fluid filterContainer">
                            <div class="oneSixthLeft">
                                <div class="dropdown" data-bind="@String.Format("firstTime")" id="dropDownFilters">
                                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" onclick="caricaFiltriPrestazioni();" aria-expanded="false">
                                        <span class="fa fa-filter"></span>
                                        <span class="text-after-icon mr-r">Filtri</span><span class="text-after-icon caret"></span>
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-left" role="menu" id="menuFiltri">

                                    </div>
                                </div>
                                @*@Html.Partial("~/views/FuoriStandard/_dropDownFilters.cshtml", new GestioneRimborsi.Web.Models.UnifiedSearchModel("RecuperoFS", new List<UnifiedSearchOptions>() {
                                    UnifiedSearchOptions.CaseId, UnifiedSearchOptions.CodCliente, UnifiedSearchOptions.DataFineAttivita,
                                    UnifiedSearchOptions.IndicatoreStd, UnifiedSearchOptions.InFuoriStd, UnifiedSearchOptions.Tipologia}))*@
                            </div>
                            <div class="pull-right mr-l" id="numeroPagineContainer">
                                <select class="form-control selectCaret" id="numeroPagine" name="numeroPagine" onchange="filtraNumeroPagine();">
                                    <option value="5" selected>5</option>
                                    <option value="10">10</option>
                                    <option value="15">15</option>
                                    <option value="20">20</option>
                                    <option value="25">25</option>
                                    <option value="30">30</option>
                                    <option value="35">35</option>
                                    <option value="40">40</option>
                                    <option value="45">45</option>
                                    <option value="50">50</option>
                                </select>
                            </div>
                            <div class="pull-right">
                                <a role="button" title="scarica contenuto dettagliato in excel" id="esportaPrestazioni" class="btn btn-default" onclick="showWaiter();"><i class="fa fa-lg fa-file-excel-o"></i></a>
                            </div>
                        </div>
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-sm-12 cointainerTableFuoriStandard bg-w" data-bind="@ViewData["Title"].ToString()" id="indennizziTableContainer">
                                    @Html.Partial("~/views/FuoriStandard/_elencoFuoriStandardNonIndennizzabili.cshtml", null)
                                </div>
                            </div>
                            <div class="row">
                                <div class="div-span-info">
                                    <a class="close" data-dismiss="alert" aria-label="close">×</a>
                                    <i class="fa fa-lg fa-info-circle"></i>  Individua il documento da gestire, quindi fai click sull'icona <i class="fa fa-chain"></i> per associare un cliente.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(".application-title").text("Gestione Fuori Standard");

    $(function () {
        $('#dataFine').datetimepicker();
    });

    $(function () {
        $('#dataInizio').datetimepicker();
    });

    function setIndennizziDataTable() {
        if ($.fn.dataTable.isDataTable('#gridNonIndennizzabili')) {
            _indennizziStoricoTable = $('#gridNonIndennizzabili').DataTable();
        }
        else {
            _indennizziStoricoTable = $('#gridNonIndennizzabili').DataTable({
                language: {
                    info: "Record da <strong>_START_</strong> a <strong>_END_</strong> di <strong>_TOTAL_</strong>",
                    infoEmpty: "",
                    zeroRecords: "",
                    emptyTable: "<div class='row' style='padding-top:10px;'><div class='col-sm-1 text-right'><span class='fa fa-3x fa-arrow-up'></span></div><div class='col-sm-11'><span style='font-size:18px;'>Nessuna prestazione individuata. Fai click su 'Filtri' per impostare i parametri di ricerca, e individuare la prestazione desiderata.</span></div></div>",
                    paginate: {
                        first: "<<",
                        previous: "<",
                        next: ">",
                        last: ">>",
                    },
                },
                "pageLength": 5,
                columns: [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                { "orderable": false },
                ],
                order: [1, 'asc']
            });
        }
        $('[data-toggle="tooltip"]').tooltip();
    }
    $(function () {
        setIndennizziDataTable();
        //$("#headingTwo a").click();
    });

    function cercaFuoriStandard(e) {
        if (e != null) {
            e.preventDefault();
            e.stopPropagation();
        }
        displayModalWaiter();

        var _tipologia = $("#codGruppo option:selected").val();
        if (_tipologia == null) {
            _tipologia = $("#codGruppo").data("bind");
        }

        var _url = '@Url.Action("CercaFSNonIndennizzabili", "FuoriStandard")';

        $.ajax({
            url: _url,
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                view: "RecuperoFS",
                tipologia: _tipologia,
                indicatore: $("#Indicatore option:selected").val(),
                codRintracciabilita: $("#codRintracciabilita").val().trim(),
                codCliente: $("#codiceCliente").val().trim(),
                dataInizio: $("#censitoDal").val(),
                dataFine: $("#censitoAl").val(),
                inStandard: $("#flgInStandard option:selected").val(),
                checkCliente: $("#checkCliente").prop("checked"),
                checkIndennizzabile: $("#checkIndennizzabile").prop("checked")
            }),
            success: function (result) {
                $("#indennizziTableContainer").html(result);
                setIndennizziDataTable();
                filtraNumeroPagine();
                $(".modal-backdrop").addClass("invisible");
                $(".dropdown").removeClass("open");
                hideModalWaiter();
            },
            error: function (request, status, error) {
                hideModalWaiter();
                notifyWarning(error);
            }
        });

        var _indicatore = $("#Indicatore option:selected").val();
        var _codRintracciabilita = $("#codRintracciabilita").val().trim();
        var _codCliente = $("#codiceCliente").val().trim();
        var _dataInizio = $("#censitoDal").val();
        var _dataFine = $("#censitoAl").val();
        var _inStandard = $("#flgInStandard option:selected").val();
        var _checkCliente = $("#checkCliente").prop("checked");
        var _checkIndennizzabile = $("#checkIndennizzabile").prop("checked");

        var _filteredUrl = '@Html.Raw(Url.Action("ExportPrestazioni", "FuoriStandard", new { view = "RecuperoFS", tipologia = "_tipologia_", indicatore = "_indicatore_", codRintracciabilita = "_codRintracciabilita_", codCliente = "_codCliente_", dataInizio = "_dataInizio_", dataFine = "_dataFine_", inStandard = "_inStandard_", checkCliente = "_checkCliente_", checkIndennizzabile = "_checkIndennizzabile_" }))'
               .replace("_tipologia_", _tipologia).replace("_indicatore_", _indicatore).replace("_codRintracciabilita_", _codRintracciabilita).replace("_codCliente_", _codCliente).replace("_dataInizio_", _dataInizio).replace("_dataFine_", _dataFine).replace("_inStandard_", _inStandard).replace("_checkCliente_", _checkCliente).replace("_checkIndennizzabile_", _checkIndennizzabile);

        $("#esportaPrestazioni").attr("href", _filteredUrl);
    }

    function exportPrestazioni() {

        var items = [];
        var allPages = _indennizziStoricoTable.cells().nodes();
        $(allPages).find('a').each(function () {
            var status = $(this).attr("name");
            items.push(status)
        });

        var _url = '@Url.Action("ExportPrestazioni", "FuoriStandard")';

        $.ajax({
            url: _url,
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                idFS: items.toString(),
            }),
            success: function (result) {
                window.location.href = _url;
            },
            error: function (request, status, error) {
                notifyWarning(error);
            }
        });
    }

    function filtraNumeroPagine() {
        var table = $('#gridNonIndennizzabili').DataTable();
        table.page.len($("#numeroPagine").val()).draw();
    }

    function caricaFiltriPrestazioni() {
        var firstTime = false;

        if (($("#dropDownFilters").data("bind") == "firstTime")) {
            firstTime = true;
        }

        if (firstTime == true) {

            var _url = '@Url.Action("FiltraDatiDropdown", "FuoriStandard")';
            //, new { view = "_view_" })'.replace("_view_", view)
            displayModalWaiter();

            $.ajax({
                url: _url,
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    view: "RecuperoFS",
                    firstTime: firstTime,
                }),
                success: function (result) {
                    $("#dropDownFilters").data("bind", "noFirstTime");
                    $("#menuFiltri").html(result);
                    hideModalWaiter();
                },
                error: function (request, status, error) {
                    hideModalWaiter();
                    notifyWarning(error + ", riprova più tardi..");
                }
            });
        }
    }

    function showWaiter() {
        displayModalWaiter();
        setTimeout(function () {
            hideModalWaiter();
        }, 3500)
    }

</script>