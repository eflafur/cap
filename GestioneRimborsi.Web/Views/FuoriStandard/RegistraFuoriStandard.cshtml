@{
    ViewBag.Title = "RegistraFuoriStandard";

    if (!CurrentUser.IsPrivileged)
    {
        Response.Redirect(CommonUrls.BaseUrl);
    }
}

@{
    IFuoriStandardService _fuoriStandardService = (IFuoriStandardService)RevoContext.ServiceProvider.GetServiceFor<FuoriStandard>();

    var totaleIndennizzi = _fuoriStandardService.GetTipologieDesc(_fuoriStandardService.GetTipologieByGrouping(RevoRequest.CurrentUser.GroupingCodes.ToList<String>())).Items;
    var gruppi = _fuoriStandardService.GetTipologieByGrouping(RevoRequest.CurrentUser.GroupingCodes.ToList<String>());
}

<div class="row">
    @Html.Partial("~/views/rimborsi/_newModalWaiter.cshtml", "")
    @Html.Partial("~/views/rimborsi/_confermaModificheModal.cshtml", "Confermare?")
    @Html.Partial("~/views/rimborsi/_cercaClienteModal.cshtml")
    <div class="col-sm-12 space-container">
        <div class="col-sm-12">
            <div id="rowFilter">
                <h2>
                    @CommonSnippets.IconLinkToHomepage
                    /
                    <i class="fa fa-plus-square"></i>
                    <span class="text-after-icon">Inserisci Fuori Standard</span>
                </h2>
            </div>
        </div>
    </div>
    <div class="col-sm-12 space-container">
        <div class="col-sm-2">
            <div class="row">
                <div class="col-sm-12">
                    @Html.Partial("_leftMenu", "RegistraFuoriStandard")
                </div>
            </div>
        </div>

        <div class="col-sm-10">
            <div class="col-sm-12 container-information panel">
                @{
                    var attributes = new Dictionary<String, Object>();
                    attributes.Add("role", "form");
                    attributes.Add("class", "breath-on-top-8");
                }

                @using (Html.BeginForm("RegistrazioneFuoriStandard", "FuoriStandard", FormMethod.Post, attributes))
                {
                    <div class="row">
                        <div class="form-group">
                            <div class="col-sm-12">
                                <div class="col-sm-12">
                                    <div class="col-sm-12 container-information">
                                        <div class="row"><div class="col-sm-12"><label>Codice Cliente</label></div></div>
                                        <div class="input-group col-sm-5 marginBottom10">
                                            <input type="text" class="form-control" id="txtSearchTerm" name="CodiceCliente" placeholder="Codice Cliente">
                                            <div class="input-group-btn">
                                                <button type="button" class="btn btn-function " title="Cerca cliente" data-toggle="modal" data-target="#cercaClienteModal" id="btnSearch">
                                                    <i id="iconSearch" class="fa fa-lg fa-ellipsis-h"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="col-sm-12" id="dettaglioClienteStorico">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12" id="codiciContrattiContainer">
                                    @Html.Partial("~/Views/FuoriStandard/_filtroContratti.cshtml", "-1")
                                </div>
                                <div class="col-sm-12 mt-10">
                                    <label for="CodicePUF" class="control-label ">Codice PUF*</label>
                                    <input type="text" class="form-control puf" id="CodicePUF" name="CodicePUF">
                                </div>
                                <div class="col-sm-12 mt-10">
                                    <label for="CodiceStandard" class="control-label ">Codice standard*</label>
                                </div>
                                <div class="col-sm-12" id="codiciStandardContainer">
                                    <select class="form-control selectCaret" id="Tipologia" name="Tipologia" onchange="changeBlock();">
                                        <option value="-1">-- Seleziona un motivo dalla lista --</option>
                                        @{foreach (TipologiaFuoriStandard item in totaleIndennizzi)
                                        {
                                            if (totaleIndennizzi.Count == 1)
                                            {
                                                if (String.IsNullOrEmpty(item.CodicePrestazione))
                                                {
                                                    <option value="@item.IDStandard" data-bind="@item.UnitaMisura" data-content="@item.ValStandard" selected>@item.DescStandard (@item.TipoStandard)</option> }
                                                else
                                                {
                                                    <option value="@item.IDStandard" data-bind="@item.UnitaMisura" data-content="@item.ValStandard">@item.DescStandard (@item.TipoStandard) - Codice Prestazione: @item.CodicePrestazione</option> }
                                            }
                                            else if (String.IsNullOrEmpty(item.CodicePrestazione))
                                            {
                                                <option value="@item.IDStandard" data-bind="@item.UnitaMisura" data-content="@item.ValStandard">@item.DescStandard (@item.TipoStandard)</option> }
                                            else
                                            {
                                                <option value="@item.IDStandard" data-bind="@item.UnitaMisura" data-content="@item.ValStandard">@item.DescStandard (@item.TipoStandard) - Codice Prestazione: @item.CodicePrestazione</option> }
                                        }
                                        }
                                    </select>
                                </div>
                                <div class="col-sm-12 mt-10">
                                    <label for="FuoriStandard" class="control-label">Tempo di Esecuzione*</label>
                                    <div class="input-group col-sm-12">
                                        <input type="number" class="form-control" step="0.1" min="1" id="FuoriStandard" name="FuoriStandard" />
                                        <div class="input-group-btn">
                                            <button class="btn btn-function disabled" type="button" id="btnTempoEsecuzione"> Tempo* </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 mt-10">
                                    <label for="DataRegistrazione" class="control-label">Data di fine prestazione (decorrenza fuoriStandard)*</label>
                                    <div id="calendarDiv2" class="input-group input-append date">
                                        <input class="form-control" data-format="dd/MM/yyyy" type="text" id="calendar2" name="calendar2" value='@DateTime.Now.ToShortDateString()' />
                                        <span class="input-group-btn add-on">
                                            <button class="btn btn-default h-btn-new" type="button">
                                                <i class="fa fa-lg fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-sm-12 mt-10">
                                    <label for="IDSalesforce" class="control-label">Codice Rintracciabilità</label>
                                    @Html.TextBox("IdSAFO", "", new { @class = "form-control" })
                                </div>
                                <div class="col-sm-12 mt-10">
                                    <label for="CodGruppo" class="control-label">Codice Gruppo</label>
                                </div>
                                <div class="col-sm-12" id="gruppiContainer">
                                    <select class="form-control selectCaret" id="CodGruppo" name="CodGruppo">
                                        <option value="-1">-- Seleziona gruppo --</option>
                                        @{foreach (String item in gruppi)
                                        {
                                            if (gruppi.Count == 1)
                                            {
                                                <option value="@item" selected>@item</option> }
                                            else
                                            {
                                                <option value="@item">@item</option> }
                                        }
                                        }
                                    </select>
                                </div>
                                <div class="col-sm-12 mt-10">
                                    <label for="Note" class="control-label">Note</label>
                                    <textarea class="form-control" name="Note" id="Note" rows="4" maxlength="3500"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-sm-12">
                    <div class="modal-footer mt-10">
                        @if (CurrentUser.IsPrivileged)
                        {
                            <button type="button" class="btn btn-lg btn-function" onclick="return registra();">
                                <i class="fa fa-lg fa-save"></i><span class="text-after-icon">Salva</span>
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(".application-title").text("Gestione Fuori Standard");

    $(function () {
        $('#calendarDiv2').datetimepicker();
    });

    function registra() {

        //if (parseFloat($("#FuoriStandard").val().replace(".", ",")) <= parseFloat($("#Tipologia option:selected").data("content"))) {       
        //    notifyWarning("Il tempo di esecuzione non genera un Fuori Standard. Il valore deve essere maggiore di " + $("#Tipologia option:selected").data("content") + " " + $("#Tipologia option:selected").data("bind") + ".");
        //    return false;
        //}

        if ($("#txtSearchTerm").val() == "") {
            notifyWarning("Nessun codice cliente selezionato...");
            return false;
        }
        if ($("#contratti").val() == "-1") {
            notifyWarning("Nessun codice contratto selezionato...");
            return false;
        }
        if ($("#CodicePUF").val() == "") {
            notifyWarning("Nessun codice puf inserito...");
            return false;
        }
        if ($("#Tipologia").val() == "-1") {
            notifyWarning("Nessun codice standard selezionato...");
            return false;
        }
        if ($("#FuoriStandard").val() == "") {
            notifyWarning("Non è stato inserito il tempo di esecuzione...");
            return false;
        }
        if ($("#calendar2").val() == "") {
            notifyWarning("Nessuna data di fine prestazione selezionata...");
            return false;
        }

        $('#confermaModifiche').modal('show');

        $("#confMod").off().click(function () {
            displayModalWaiter();
            $("<input>", { type: "hidden", name: "ValStandard", value: $("#Tipologia option:selected").data("content") }).appendTo("form:first");
            $("form:first").submit();
            notifySuccess("Registrazione completata");
            setTimeout(function () {
                hideModalWaiter();
            }, 15000);
        });
    }

    $("#txtSearchTerm").bind("keypress", function (e) {
        setTimeout(function () {
            if (e.keyCode == 13 && e.target.value.length < 10) {
                $("#btnSearch").click();
            }
            else if (e.target.value.length >= 10) {
                ricercaEsatta($("#txtSearchTerm").val());
            }
        }, 50);
    });
    $("#txtSearchTerm").bind("paste", function (e) {
        setTimeout(function () {
            var pastedData = e.target.value
            if (pastedData.length >= 10)
                ricercaEsatta(pastedData);
        }, 50);

    });

    function ricercaEsatta(_term) {
        var _url;
        var _user;
        var _perm;

        displayModalWaiter();

        var _url = '@Url.Action("SchedaClienteStorico", "FuoriStandard", new { CodiceCliente = "_term_" })'.replace('_term_', _term);
        $("#dettaglioClienteStorico").load(_url, function () {
            filtraDatiByCliente();
            hideModalWaiter();
            $("#cercaClienteModal").modal("hide");
        });
    }

    function impostaUtente(utente) {
        displayModalWaiter();
        var _term = $("#txtSearchTerm").val();
        if ((_term.trim().length < 10 || _term.trim().length > 10) && _term.trim().length != 0) {
            notifyWarning("Inserisci un codice cliente valido...");
            hideModalWaiter();
            return false;
        }

        var _url = '@Url.Action("SchedaClienteStorico", "FuoriStandard", new { CodiceCliente = "_term_" })'.replace('_term_', _term);
        $("#dettaglioClienteStorico").load(_url, function () {
            hideModalWaiter();
            $("#cercaClienteModal").modal("hide");
        });
    }

    function filtraDatiByCliente() {

        var _cliente = $("#txtSearchTerm").val();
        var _url = '@Url.Action("FiltraDatiContratti", "FuoriStandard", new { CodiceCliente = "_cliente_" })'.replace("_cliente_", _cliente);

        displayModalWaiter();

        $.ajax({
            url: _url,
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                CodiceCliente: _cliente
            }),
            success: function (result) {
                $("#codiciContrattiContainer").html(result);
                $("#CodicePUF").val("");
                $("#CodicePUF").text("");
                $("#CodicePUF").attr("readonly", false);
                hideModalWaiter();
            },
            error: function (request, status, error) {
                hideModalWaiter();
                notifyWarning(error);
            }
        });
    }

    function filtraPUF() {

        var _contratto = $("#contratti").val();
        var _url = '@Url.Action("FiltraDatiPUF", "FuoriStandard", new { CodiceContratto = "_contratto_" })'.replace("_contratto_", _contratto);

        displayModalWaiter();

        $.ajax({
            url: _url,
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                CodiceContratto: _contratto
            }),
            success: function (result) {
                $("#CodicePUF").val(result);
                $("#CodicePUF").text(result);
                if (result != "")
                { $("#CodicePUF").attr("readonly", true); }
                else { $("#CodicePUF").attr("readonly", false); }
                hideModalWaiter();
            },
            error: function (request, status, error) {
                hideModalWaiter();
                notifyWarning(error);
            }
        });
    }

    function changeBlock() {
        $("#btnTempoEsecuzione").text($("#Tipologia option:selected").data("bind"));
        $("#FuoriStandard").attr("min", $("#Tipologia option:selected").data("content"));
        $("#FuoriStandard").val($("#Tipologia option:selected").data("content"));
    }

</script>
